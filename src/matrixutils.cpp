/*

Owen Gallagher, Brian Park
21 April 2019
Computer Graphics

matrixutils.cpp

*/

#include "../include/matrixutils.h"

/*
Adapted from StackOverflow answer, from the MESA opengl extension:
https://stackoverflow.com/questions/1148309/outerting-a-4x4-matrix
*/
bool matrixutils::invert(const float m[16], float out[16]) {
	double temp[16], det;
	int i;

	temp[0] = m[5]  * m[10] * m[15] - 
				m[5]  * m[11] * m[14] - 
				m[9]  * m[6]  * m[15] + 
				m[9]  * m[7]  * m[14] +
				m[13] * m[6]  * m[11] - 
				m[13] * m[7]  * m[10];

	temp[4] = -m[4]  * m[10] * m[15] + 
				m[4]  * m[11] * m[14] + 
				m[8]  * m[6]  * m[15] - 
				m[8]  * m[7]  * m[14] - 
				m[12] * m[6]  * m[11] + 
				m[12] * m[7]  * m[10];

	temp[8] = m[4]  * m[9] * m[15] - 
				m[4]  * m[11] * m[13] - 
				m[8]  * m[5] * m[15] + 
				m[8]  * m[7] * m[13] + 
				m[12] * m[5] * m[11] - 
				m[12] * m[7] * m[9];

	temp[12] = -m[4]  * m[9] * m[14] + 
				m[4]  * m[10] * m[13] +
				m[8]  * m[5] * m[14] - 
				m[8]  * m[6] * m[13] - 
				m[12] * m[5] * m[10] + 
				m[12] * m[6] * m[9];

	temp[1] = -m[1]  * m[10] * m[15] + 
				m[1]  * m[11] * m[14] + 
				m[9]  * m[2] * m[15] - 
				m[9]  * m[3] * m[14] - 
				m[13] * m[2] * m[11] + 
				m[13] * m[3] * m[10];

	temp[5] = m[0]  * m[10] * m[15] - 
				m[0]  * m[11] * m[14] - 
				m[8]  * m[2] * m[15] + 
				m[8]  * m[3] * m[14] + 
				m[12] * m[2] * m[11] - 
				m[12] * m[3] * m[10];

	temp[9] = -m[0]  * m[9] * m[15] + 
				m[0]  * m[11] * m[13] + 
				m[8]  * m[1] * m[15] - 
				m[8]  * m[3] * m[13] - 
				m[12] * m[1] * m[11] + 
				m[12] * m[3] * m[9];

	temp[13] = m[0]  * m[9] * m[14] - 
				m[0]  * m[10] * m[13] - 
				m[8]  * m[1] * m[14] + 
				m[8]  * m[2] * m[13] + 
				m[12] * m[1] * m[10] - 
				m[12] * m[2] * m[9];

	temp[2] = m[1]  * m[6] * m[15] - 
				m[1]  * m[7] * m[14] - 
				m[5]  * m[2] * m[15] + 
				m[5]  * m[3] * m[14] + 
				m[13] * m[2] * m[7] - 
				m[13] * m[3] * m[6];

	temp[6] = -m[0]  * m[6] * m[15] + 
				m[0]  * m[7] * m[14] + 
				m[4]  * m[2] * m[15] - 
				m[4]  * m[3] * m[14] - 
				m[12] * m[2] * m[7] + 
				m[12] * m[3] * m[6];

	temp[10] = m[0]  * m[5] * m[15] - 
				m[0]  * m[7] * m[13] - 
				m[4]  * m[1] * m[15] + 
				m[4]  * m[3] * m[13] + 
				m[12] * m[1] * m[7] - 
				m[12] * m[3] * m[5];

	temp[14] = -m[0]  * m[5] * m[14] + 
				m[0]  * m[6] * m[13] + 
				m[4]  * m[1] * m[14] - 
				m[4]  * m[2] * m[13] - 
				m[12] * m[1] * m[6] + 
				m[12] * m[2] * m[5];

	temp[3] = -m[1] * m[6] * m[11] + 
				m[1] * m[7] * m[10] + 
				m[5] * m[2] * m[11] - 
				m[5] * m[3] * m[10] - 
				m[9] * m[2] * m[7] + 
				m[9] * m[3] * m[6];

	temp[7] = m[0] * m[6] * m[11] - 
				m[0] * m[7] * m[10] - 
				m[4] * m[2] * m[11] + 
				m[4] * m[3] * m[10] + 
				m[8] * m[2] * m[7] - 
				m[8] * m[3] * m[6];

	temp[11] = -m[0] * m[5] * m[11] + 
				m[0] * m[7] * m[9] + 
				m[4] * m[1] * m[11] - 
				m[4] * m[3] * m[9] - 
				m[8] * m[1] * m[7] + 
				m[8] * m[3] * m[5];

	temp[15] = m[0] * m[5] * m[10] - 
				m[0] * m[6] * m[9] - 
				m[4] * m[1] * m[10] + 
				m[4] * m[2] * m[9] + 
				m[8] * m[1] * m[6] - 
				m[8] * m[2] * m[5];

	det = m[0] * temp[0] + m[1] * temp[4] + m[2] * temp[8] + m[3] * temp[12];

	if (det == 0)
	    return false;

	det = 1.0 / det;

	for (i = 0; i < 16; i++)
	    out[i] = temp[i] * det;

	return true;
}

/*
Adapted from GLU:
https://www.khronos.org/opengl/wiki/GluProject_and_gluUnProject_code
*/
void matrixutils::mult(const float m1[16], const float m2[16], float out[16]) {
	out[0]=m1[0]*m2[0]+
	  m1[4]*m2[1]+
	  m1[8]*m2[2]+
	  m1[12]*m2[3];
	out[4]=m1[0]*m2[4]+
	  m1[4]*m2[5]+
	  m1[8]*m2[6]+
	  m1[12]*m2[7];
	out[8]=m1[0]*m2[8]+
	  m1[4]*m2[9]+
	  m1[8]*m2[10]+
	  m1[12]*m2[11];
	out[12]=m1[0]*m2[12]+
	  m1[4]*m2[13]+
	  m1[8]*m2[14]+
	  m1[12]*m2[15];
	out[1]=m1[1]*m2[0]+
	  m1[5]*m2[1]+
	  m1[9]*m2[2]+
	  m1[13]*m2[3];
	out[5]=m1[1]*m2[4]+
	  m1[5]*m2[5]+
	  m1[9]*m2[6]+
	  m1[13]*m2[7];
	out[9]=m1[1]*m2[8]+
	  m1[5]*m2[9]+
	  m1[9]*m2[10]+
	  m1[13]*m2[11];
	out[13]=m1[1]*m2[12]+
	  m1[5]*m2[13]+
	  m1[9]*m2[14]+
	  m1[13]*m2[15];
	out[2]=m1[2]*m2[0]+
	  m1[6]*m2[1]+
	  m1[10]*m2[2]+
	  m1[14]*m2[3];
	out[6]=m1[2]*m2[4]+
	  m1[6]*m2[5]+
	  m1[10]*m2[6]+
	  m1[14]*m2[7];
	out[10]=m1[2]*m2[8]+
	  m1[6]*m2[9]+
	  m1[10]*m2[10]+
	  m1[14]*m2[11];
	out[14]=m1[2]*m2[12]+
	  m1[6]*m2[13]+
	  m1[10]*m2[14]+
	  m1[14]*m2[15];
	out[3]=m1[3]*m2[0]+
	  m1[7]*m2[1]+
	  m1[11]*m2[2]+
	  m1[15]*m2[3];
	out[7]=m1[3]*m2[4]+
	  m1[7]*m2[5]+
	  m1[11]*m2[6]+
	  m1[15]*m2[7];
	out[11]=m1[3]*m2[8]+
	  m1[7]*m2[9]+
	  m1[11]*m2[10]+
	  m1[15]*m2[11];
	out[15]=m1[3]*m2[12]+
	  m1[7]*m2[13]+
	  m1[11]*m2[14]+
	  m1[15]*m2[15];
}